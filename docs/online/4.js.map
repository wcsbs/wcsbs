{"version":3,"sources":["webpack:///src/components/Practice.vue","webpack:///./src/components/Practice.vue?ad03","webpack:///./src/components/Practice.vue","webpack:///./src/components/Practice.vue?d790","webpack:///./src/components/Practice.vue?8adc"],"names":[],"mappings":"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AAMA,6BACA,sCACA,SADA,GAEA;AACA;AAAA;AAAA;AAAA;AACA,OAFA,CAHA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AADA;AAGA;AACA;;AAEA,oBACA,iIAEA,yBAFA,CADA;AAIA;AACA,oCADA;AAEA,sEACA,mCADA;AAFA;AAMA;AAEA;AACA,gCACA,iDADA;AAGA;AACA;AAEA,kBACA,kEACA,SADA,GAEA,mCAHA;AAIA;AAEA,mEACA,UADA,0BACA,UADA,qBACA,KADA,gCACA,eACA,gBADA,CADA;AAMA,mBACA,OADA,CACA,OADA,EACA,OADA,EAEA,IAFA,CAEA;AACA;AACA,gCADA;AAEA,gCAFA;AAGA,sBAHA;AAIA;AAJA,WAMA,IANA,CAMA;AACA,8DACA,sBADA;AAIA,+EACA,MADA;AAIA;;AACA;AACA;AACA;AACA;AACA,SApBA,EAqBA,KArBA,CAqBA;AACA;AACA;AACA;AACA,SAzBA;AA0BA,OA7BA,EA8BA,KA9BA,CA8BA;AACA;AACA,OAhCA;AAiCA;AA1SA;AAnCA,G;;;;;;;;;;;;AC1JA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qCAAqC,+BAA+B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iBAAiB;AACjB;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,wCAAwC;AACxC,+BAA+B;AAC/B;AACA,wCAAwC;AACxC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B,mBAAmB,EAAE;AACpE;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,MAAM,uBAAuB,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,yCAAyC;AACzC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,qBAAqB;AACvE;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qBAAqB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3cA;AAAA;AAAA;AAAA;AAAuF;AAC3B;AACL;;;AAGvD;AAC0F;AAC1F,gBAAgB,2GAAU;AAC1B,EAAE,8EAAM;AACR,EAAE,mFAAM;AACR,EAAE,4FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,IAAU;AACd,YAAY,mBAAO,CAAC,wGAA4G;AAChI,cAAc,mBAAO,CAAC,uDAAK;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,mHAA+C,EAAE;AAAA;AACvE;AACA,gBAAgB,mFAAM;AACtB,yBAAyB,4FAAe;AACxC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAqR,CAAgB,yUAAG,EAAC,C;;;;;;;;;;;;ACAzS;AAAA;AAAA;AAAA;AAAA;AAAA","file":"4.js","sourcesContent":["<template>\n  <div>\n    <b-card class=\"text-center\" :header=\"practiceObj.name\">\n      <b-card-text>\n        <b-input-group\n          :prepend=\"forAdmin ? '统计日期：' : '最新报数：'\"\n          class=\"mt-3\"\n        >\n          <b-form-input\n            readonly\n            v-model=\"practiceCountObj.latestCount\"\n          ></b-form-input>\n          <b-input-group-append>\n            <b-button\n              variant=\"info\"\n              v-on:click=\"\n                practiceObj.showDescription = !practiceObj.showDescription\n              \"\n            >\n              <b-icon\n                v-if=\"practiceObj.showDescription\"\n                icon=\"chevron-double-up\"\n              ></b-icon>\n              <b-icon v-else icon=\"chevron-double-down\"></b-icon>\n            </b-button>\n          </b-input-group-append>\n        </b-input-group>\n        <b-input-group prepend=\"总计报数：\" class=\"mt-3\">\n          <b-form-input\n            readonly\n            v-model=\"practiceCountObj.accumulatedCount\"\n          ></b-form-input>\n          <b-input-group-append>\n            <b-button\n              v-if=\"isStudent && !forAdmin\"\n              variant=\"warning\"\n              v-on:click=\"toggleReportingCount()\"\n              >{{\n                practiceObj.showReportingCount ? \"完成报数\" : \"我要报数\"\n              }}</b-button\n            >\n          </b-input-group-append>\n        </b-input-group>\n        <b-form @submit=\"onSubmit\" v-if=\"practiceObj.showReportingCount\">\n          <b-input-group prepend=\"选择日期：\" class=\"mt-3\">\n            <v-date-picker\n              locale=\"zh-CN\"\n              v-model=\"practiceObj.newCountReportedAt\"\n              :min-date=\"minDateForCountReporting()\"\n              :max-date=\"new Date()\"\n              :input-props=\"{\n                readonly: true\n              }\"\n            />\n            <b-input-group-append v-if=\"practiceSubmodules.length > 0\">\n              <b-button type=\"submit\" variant=\"primary\">提交</b-button>\n            </b-input-group-append>\n          </b-input-group>\n          <div v-if=\"practiceSubmodules.length > 0\">\n            <b-input-group prepend=\"输入时长：\" class=\"mt-3\">\n              <b-form-input\n                id=\"input-hours\"\n                v-model=\"practiceObj.newDurationHours\"\n                type=\"number\"\n                placeholder=\"多少小时？\"\n              ></b-form-input>\n              <b-input-group-append>\n                <b-form-input\n                  id=\"input-minutes\"\n                  v-model=\"practiceObj.newDurationMinutes\"\n                  type=\"number\"\n                  placeholder=\"多少分钟？\"\n                ></b-form-input>\n              </b-input-group-append>\n            </b-input-group>\n            <b-input-group prepend=\"选择修法：\" class=\"mt-3\">\n              <select v-model=\"practiceObj.submoduleId\">\n                <option\n                  v-for=\"session in practiceSubmodules\"\n                  v-bind:key=\"session.id\"\n                  v-bind:value=\"session.id\"\n                  >{{ session.name }}</option\n                >\n              </select>\n              <b-input-group-append>\n                <b-button variant=\"success\" v-on:click=\"addPracticeSession()\"\n                  >增加</b-button\n                >\n              </b-input-group-append>\n            </b-input-group>\n            <b-input-group\n              v-for=\"(session, index) in practiceObj.sessions\"\n              :key=\"session.id + index\"\n              prepend=\"实修座次：\"\n              class=\"mt-3\"\n            >\n              <b-form-input\n                readonly\n                :value=\"\n                  `(${index + 1}) ${session.name}：${session.duration}分钟`\n                \"\n              ></b-form-input>\n              <b-input-group-append>\n                <b-button\n                  variant=\"warning\"\n                  v-on:click=\"removePracticeSession(index)\"\n                  >删除</b-button\n                >\n              </b-input-group-append>\n            </b-input-group>\n          </div>\n          <b-input-group v-else prepend=\"输入报数：\" class=\"mt-3\">\n            <b-form-input\n              id=\"input-count\"\n              v-model=\"practiceObj.newCount\"\n              type=\"number\"\n              placeholder=\"输入报数\"\n            ></b-form-input>\n            <b-input-group-append>\n              <b-button type=\"submit\" variant=\"primary\">提交</b-button>\n            </b-input-group-append>\n          </b-input-group>\n        </b-form>\n        <b-form-textarea\n          v-if=\"practiceObj.showDescription\"\n          v-model=\"practiceObj.description\"\n          placeholder=\"\"\n          rows=\"3\"\n          max-rows=\"8\"\n          readonly\n        ></b-form-textarea>\n        <div v-if=\"practiceCounts\">\n          <div v-if=\"!forAdmin\">\n            <hr />\n            <DownloadReport\n              :forSelf=\"true\"\n              :practiceId=\"practice._getId()\"\n              :worksheet=\"`${practice.get('name')}统计`\"\n            />\n          </div>\n          <h5>总计有 {{ items.length }} 条报数记录</h5>\n          <b-table striped hover :items=\"items\" :fields=\"fields\"></b-table>\n        </div>\n      </b-card-text>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport DatePicker from \"v-calendar/lib/components/date-picker.umd\";\nimport DownloadReport from \"@/components/DownloadReport\";\nimport Parse from \"parse\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"Practice\",\n  components: {\n    DatePicker,\n    DownloadReport\n  },\n  props: {\n    practice: { type: Object, required: true },\n    latestPracticeCount: { type: Object, required: false },\n    practiceSubmodules: { type: Array, required: false },\n    practiceSessions: { type: Array, required: false },\n    practiceCounts: { type: Array, required: false },\n    users: { type: Array, required: false },\n    forAdmin: Boolean\n  },\n  computed: {\n    ...mapGetters([\"isStudent\"])\n  },\n  data: function() {\n    return {\n      practiceObj: {\n        name: this.practice.get(\"name\"),\n        description: this.practice.get(\"description\"),\n        showDescription: false,\n        showReportingCount: false,\n        newCountReportedAt: \"\",\n        newCount: \"\",\n        submoduleId: undefined,\n        sessions: []\n      },\n      practiceCountObj: this.buildPracticeCountObj(this.latestPracticeCount),\n      fields: this.buildPracticeCountFields(),\n      items: this.buildPracticeCountItems()\n    };\n  },\n  methods: {\n    buildPracticeCountFields() {\n      var fields = [\n        {\n          key: this.forAdmin ? \"name\" : \"reportedAt\",\n          label: this.forAdmin ? \"姓名\" : \"日期\",\n          sortable: true\n        },\n        {\n          key: \"count\",\n          label: \"报数\",\n          sortable: true\n        }\n      ];\n      if (\n        !this.forAdmin &&\n        this.practiceSubmodules &&\n        this.practiceSubmodules.length > 0\n      ) {\n        fields[1] = {\n          key: \"sessionName\",\n          label: \"修法\",\n          sortable: true\n        };\n        fields.push({\n          key: \"duration\",\n          label: \"时长\",\n          sortable: true\n        });\n      }\n      return fields;\n    },\n    formatCount(count) {\n      if (count != undefined) {\n        return count.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n      }\n      return \"\";\n    },\n    formatCountList(list) {\n      if (list) {\n        list = list.map(e => {\n          return this.formatCount(e);\n        });\n        return list.join(\",\");\n      }\n      return \"\";\n    },\n    formatDuration(duration) {\n      var hours = Math.floor(duration / 60);\n      if (hours) {\n        hours = `${hours}小时`;\n      } else {\n        hours = \"\";\n      }\n      var minutes = duration % 60;\n      if (minutes) {\n        minutes = `${minutes}分钟`;\n      } else {\n        minutes = \"\";\n      }\n      return `${hours}${minutes}`;\n    },\n    buildPracticeCountItems() {\n      var items = [];\n      if (this.practiceCounts) {\n        if (this.forAdmin) {\n          for (var i = 0; i < this.practiceCounts.length; i++) {\n            items.push({\n              name: this.users[i],\n              count: this.formatCount(this.practiceCounts[i].get(\"count\"))\n            });\n          }\n        } else {\n          const practiceSubmodules = this.practiceSubmodules;\n          for (i = 0; i < this.practiceCounts.length; i++) {\n            const e = this.practiceCounts[i];\n            if (!e.get(\"reportedAt\")) {\n              continue;\n            }\n\n            if (this.practiceSessions && this.practiceSessions[i]) {\n              const practiceSessions = this.practiceSessions[i];\n              for (var j = 0; j < practiceSessions.length; j++) {\n                const submoduleId = practiceSessions[j].get(\"submoduleId\");\n                var sessionName = undefined;\n                if (submoduleId) {\n                  sessionName = practiceSubmodules.find(\n                    s => s.id == submoduleId\n                  ).name;\n                }\n                const duration = practiceSessions[j].get(\"duration\");\n\n                items.push({\n                  reportedAt: this.toLocalDateString(e.get(\"reportedAt\")),\n                  sessionName,\n                  duration: this.formatDuration(duration)\n                });\n              }\n            } else {\n              items.push({\n                reportedAt: this.toLocalDateString(e.get(\"reportedAt\")),\n                count: this.formatCount(e.get(\"count\"))\n              });\n            }\n          }\n        }\n      }\n      return items;\n    },\n    buildPracticeCountObj(latestPracticeCount) {\n      return this.forAdmin\n        ? {\n            latestCount:\n              latestPracticeCount && latestPracticeCount.reportedAt\n                ? `${this.toLocalDateString(\n                    new Date(latestPracticeCount.reportedAt)\n                  )}`\n                : \"未报数\",\n            accumulatedCount:\n              latestPracticeCount && latestPracticeCount.accumulatedCount\n                ? this.formatCount(latestPracticeCount.accumulatedCount)\n                : \"未报数\"\n          }\n        : {\n            latestCount:\n              latestPracticeCount && latestPracticeCount.reportedAt\n                ? `${this.formatCount(\n                    latestPracticeCount.count\n                  )} @ ${this.toLocalDateString(\n                    latestPracticeCount.reportedAt\n                  )}`\n                : \"未报数\",\n            accumulatedCount:\n              latestPracticeCount && latestPracticeCount.accumulatedCount\n                ? this.formatCount(latestPracticeCount.accumulatedCount)\n                : \"未报数\"\n          };\n    },\n    minDateForCountReporting() {\n      const today = new Date();\n      //student must report count within 365 days\n      return new Date(today.getTime() - 365 * 24 * 60 * 60 * 1000);\n    },\n    toLocalDateTimeString(date) {\n      const options = {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\"\n      };\n      return date.toLocaleDateString(\"zh-CN\", options);\n    },\n    toLocalDateString(date) {\n      const options = {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      };\n      return date.toLocaleDateString(\"zh-CN\", options);\n    },\n    toggleReportingCount() {\n      this.practiceObj.showReportingCount = !this.practiceObj\n        .showReportingCount;\n      this.practiceObj.newCountReportedAt = undefined;\n      this.practiceObj.newCount = undefined;\n      this.practiceObj.newDurationHours = undefined;\n      this.practiceObj.newDurationMinutes = undefined;\n      this.practiceObj.submoduleId = undefined;\n      this.practiceObj.sessions = [];\n    },\n    addPracticeSession() {\n      const id = this.practiceObj.submoduleId;\n      var duration = 0;\n      if (this.practiceObj.newDurationHours) {\n        duration += parseInt(this.practiceObj.newDurationHours) * 60;\n      }\n      if (this.practiceObj.newDurationMinutes) {\n        duration += parseInt(this.practiceObj.newDurationMinutes);\n      }\n\n      var errorMessage = \"\";\n      if (duration < 30) {\n        errorMessage = `${errorMessage}每座时长不能少于30分钟！`;\n      }\n      if (!id) {\n        errorMessage = `${errorMessage}请选择修法！`;\n      }\n      if (errorMessage.length) {\n        this.$dialog.alert(errorMessage, {\n          okText: \"知道了\"\n        });\n      } else {\n        const name = this.practiceSubmodules.find(e => e.id == id).name;\n        this.practiceObj.sessions.push({ id, name, duration });\n      }\n    },\n    removePracticeSession(index) {\n      this.practiceObj.sessions.splice(index, 1);\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      const options = {\n        okText: \"确认\",\n        cancelText: \"取消\",\n        loader: true // default: false - when set to true, the proceed button shows a loader when clicked; and a dialog object will be passed to the then() callback\n      };\n\n      const practiceSessions =\n        this.practiceSubmodules.length == 0\n          ? undefined\n          : this.practiceObj.sessions.map(e => {\n              return { submoduleId: e.id, duration: e.duration };\n            });\n      if (this.practiceSubmodules.length > 0) {\n        this.practiceObj.newCount = this.practiceObj.sessions.length.toString();\n      }\n\n      if (this.practiceObj.newCount) {\n        this.practiceObj.newCount = this.practiceObj.newCount.trim();\n      }\n\n      var errorMessage = \"\";\n      if (!this.practiceObj.newCountReportedAt) {\n        errorMessage = `${errorMessage}请选择日期！`;\n      }\n\n      if (errorMessage.length) {\n        this.$dialog.alert(errorMessage, {\n          okText: \"知道了\"\n        });\n        return;\n      }\n\n      const prepend =\n        !this.practiceObj.newCount || !this.practiceObj.newCount.length\n          ? `删除报数`\n          : `新增报数${this.practiceObj.newCount}`;\n      const message = {\n        title: this.practiceObj.name,\n        body: `${prepend} @ ${this.toLocalDateString(\n          this.practiceObj.newCountReportedAt\n        )}？`\n      };\n      const practiceId = this.practice.id;\n\n      const reportedAt = new Date(0);\n      reportedAt.setUTCFullYear(\n        this.practiceObj.newCountReportedAt.getFullYear()\n      );\n      reportedAt.setUTCMonth(this.practiceObj.newCountReportedAt.getMonth());\n      reportedAt.setUTCDate(this.practiceObj.newCountReportedAt.getDate());\n\n      const count =\n        !this.practiceObj.newCount || !this.practiceObj.newCount.length\n          ? undefined\n          : parseInt(this.practiceObj.newCount);\n      const thisComponent = this;\n\n      console.log(\n        `home:reportPracticeCount - practiceId: ${practiceId} reportedAt: ${reportedAt} count: ${count} practiceSessions: ${JSON.stringify(\n          practiceSessions\n        )}`\n      );\n\n      this.$dialog\n        .confirm(message, options)\n        .then(function(dialog) {\n          Parse.Cloud.run(\"home:reportPracticeCountV2\", {\n            practiceId,\n            reportedAt,\n            count,\n            practiceSessions\n          })\n            .then(result => {\n              console.log(\n                `reportPracticeCount - result: ${JSON.stringify(result)}`\n              );\n\n              thisComponent.practiceCountObj = thisComponent.buildPracticeCountObj(\n                result\n              );\n\n              dialog.close();\n              if (thisComponent.practiceCounts) {\n                // thisComponent.$router.go();\n                window.location.reload();\n              }\n            })\n            .catch(e => {\n              console.log(`error in reportPracticeCount: ${e}`);\n              dialog.close();\n              thisComponent.$dialog.alert(`error in reportPracticeCount: ${e}`);\n            });\n        })\n        .catch(e => {\n          console.log(`error: ${e}`);\n        });\n    }\n  }\n};\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-card\",\n        { staticClass: \"text-center\", attrs: { header: _vm.practiceObj.name } },\n        [\n          _c(\n            \"b-card-text\",\n            [\n              _c(\n                \"b-input-group\",\n                {\n                  staticClass: \"mt-3\",\n                  attrs: { prepend: _vm.forAdmin ? \"统计日期：\" : \"最新报数：\" }\n                },\n                [\n                  _c(\"b-form-input\", {\n                    attrs: { readonly: \"\" },\n                    model: {\n                      value: _vm.practiceCountObj.latestCount,\n                      callback: function($$v) {\n                        _vm.$set(_vm.practiceCountObj, \"latestCount\", $$v)\n                      },\n                      expression: \"practiceCountObj.latestCount\"\n                    }\n                  }),\n                  _c(\n                    \"b-input-group-append\",\n                    [\n                      _c(\n                        \"b-button\",\n                        {\n                          attrs: { variant: \"info\" },\n                          on: {\n                            click: function($event) {\n                              _vm.practiceObj.showDescription = !_vm.practiceObj\n                                .showDescription\n                            }\n                          }\n                        },\n                        [\n                          _vm.practiceObj.showDescription\n                            ? _c(\"b-icon\", {\n                                attrs: { icon: \"chevron-double-up\" }\n                              })\n                            : _c(\"b-icon\", {\n                                attrs: { icon: \"chevron-double-down\" }\n                              })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"b-input-group\",\n                { staticClass: \"mt-3\", attrs: { prepend: \"总计报数：\" } },\n                [\n                  _c(\"b-form-input\", {\n                    attrs: { readonly: \"\" },\n                    model: {\n                      value: _vm.practiceCountObj.accumulatedCount,\n                      callback: function($$v) {\n                        _vm.$set(_vm.practiceCountObj, \"accumulatedCount\", $$v)\n                      },\n                      expression: \"practiceCountObj.accumulatedCount\"\n                    }\n                  }),\n                  _c(\n                    \"b-input-group-append\",\n                    [\n                      _vm.isStudent && !_vm.forAdmin\n                        ? _c(\n                            \"b-button\",\n                            {\n                              attrs: { variant: \"warning\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.toggleReportingCount()\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.practiceObj.showReportingCount\n                                    ? \"完成报数\"\n                                    : \"我要报数\"\n                                )\n                              )\n                            ]\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm.practiceObj.showReportingCount\n                ? _c(\n                    \"b-form\",\n                    { on: { submit: _vm.onSubmit } },\n                    [\n                      _c(\n                        \"b-input-group\",\n                        {\n                          staticClass: \"mt-3\",\n                          attrs: { prepend: \"选择日期：\" }\n                        },\n                        [\n                          _c(\"v-date-picker\", {\n                            attrs: {\n                              locale: \"zh-CN\",\n                              \"min-date\": _vm.minDateForCountReporting(),\n                              \"max-date\": new Date(),\n                              \"input-props\": {\n                                readonly: true\n                              }\n                            },\n                            model: {\n                              value: _vm.practiceObj.newCountReportedAt,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.practiceObj,\n                                  \"newCountReportedAt\",\n                                  $$v\n                                )\n                              },\n                              expression: \"practiceObj.newCountReportedAt\"\n                            }\n                          }),\n                          _vm.practiceSubmodules.length > 0\n                            ? _c(\n                                \"b-input-group-append\",\n                                [\n                                  _c(\n                                    \"b-button\",\n                                    {\n                                      attrs: {\n                                        type: \"submit\",\n                                        variant: \"primary\"\n                                      }\n                                    },\n                                    [_vm._v(\"提交\")]\n                                  )\n                                ],\n                                1\n                              )\n                            : _vm._e()\n                        ],\n                        1\n                      ),\n                      _vm.practiceSubmodules.length > 0\n                        ? _c(\n                            \"div\",\n                            [\n                              _c(\n                                \"b-input-group\",\n                                {\n                                  staticClass: \"mt-3\",\n                                  attrs: { prepend: \"输入时长：\" }\n                                },\n                                [\n                                  _c(\"b-form-input\", {\n                                    attrs: {\n                                      id: \"input-hours\",\n                                      type: \"number\",\n                                      placeholder: \"多少小时？\"\n                                    },\n                                    model: {\n                                      value: _vm.practiceObj.newDurationHours,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.practiceObj,\n                                          \"newDurationHours\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"practiceObj.newDurationHours\"\n                                    }\n                                  }),\n                                  _c(\n                                    \"b-input-group-append\",\n                                    [\n                                      _c(\"b-form-input\", {\n                                        attrs: {\n                                          id: \"input-minutes\",\n                                          type: \"number\",\n                                          placeholder: \"多少分钟？\"\n                                        },\n                                        model: {\n                                          value:\n                                            _vm.practiceObj.newDurationMinutes,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.practiceObj,\n                                              \"newDurationMinutes\",\n                                              $$v\n                                            )\n                                          },\n                                          expression:\n                                            \"practiceObj.newDurationMinutes\"\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"b-input-group\",\n                                {\n                                  staticClass: \"mt-3\",\n                                  attrs: { prepend: \"选择修法：\" }\n                                },\n                                [\n                                  _c(\n                                    \"select\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.practiceObj.submoduleId,\n                                          expression: \"practiceObj.submoduleId\"\n                                        }\n                                      ],\n                                      on: {\n                                        change: function($event) {\n                                          var $$selectedVal = Array.prototype.filter\n                                            .call(\n                                              $event.target.options,\n                                              function(o) {\n                                                return o.selected\n                                              }\n                                            )\n                                            .map(function(o) {\n                                              var val =\n                                                \"_value\" in o\n                                                  ? o._value\n                                                  : o.value\n                                              return val\n                                            })\n                                          _vm.$set(\n                                            _vm.practiceObj,\n                                            \"submoduleId\",\n                                            $event.target.multiple\n                                              ? $$selectedVal\n                                              : $$selectedVal[0]\n                                          )\n                                        }\n                                      }\n                                    },\n                                    _vm._l(_vm.practiceSubmodules, function(\n                                      session\n                                    ) {\n                                      return _c(\n                                        \"option\",\n                                        {\n                                          key: session.id,\n                                          domProps: { value: session.id }\n                                        },\n                                        [_vm._v(_vm._s(session.name))]\n                                      )\n                                    }),\n                                    0\n                                  ),\n                                  _c(\n                                    \"b-input-group-append\",\n                                    [\n                                      _c(\n                                        \"b-button\",\n                                        {\n                                          attrs: { variant: \"success\" },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.addPracticeSession()\n                                            }\n                                          }\n                                        },\n                                        [_vm._v(\"增加\")]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              ),\n                              _vm._l(_vm.practiceObj.sessions, function(\n                                session,\n                                index\n                              ) {\n                                return _c(\n                                  \"b-input-group\",\n                                  {\n                                    key: session.id + index,\n                                    staticClass: \"mt-3\",\n                                    attrs: { prepend: \"实修座次：\" }\n                                  },\n                                  [\n                                    _c(\"b-form-input\", {\n                                      attrs: {\n                                        readonly: \"\",\n                                        value:\n                                          \"(\" +\n                                          (index + 1) +\n                                          \") \" +\n                                          session.name +\n                                          \"：\" +\n                                          session.duration +\n                                          \"分钟\"\n                                      }\n                                    }),\n                                    _c(\n                                      \"b-input-group-append\",\n                                      [\n                                        _c(\n                                          \"b-button\",\n                                          {\n                                            attrs: { variant: \"warning\" },\n                                            on: {\n                                              click: function($event) {\n                                                return _vm.removePracticeSession(\n                                                  index\n                                                )\n                                              }\n                                            }\n                                          },\n                                          [_vm._v(\"删除\")]\n                                        )\n                                      ],\n                                      1\n                                    )\n                                  ],\n                                  1\n                                )\n                              })\n                            ],\n                            2\n                          )\n                        : _c(\n                            \"b-input-group\",\n                            {\n                              staticClass: \"mt-3\",\n                              attrs: { prepend: \"输入报数：\" }\n                            },\n                            [\n                              _c(\"b-form-input\", {\n                                attrs: {\n                                  id: \"input-count\",\n                                  type: \"number\",\n                                  placeholder: \"输入报数\"\n                                },\n                                model: {\n                                  value: _vm.practiceObj.newCount,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.practiceObj, \"newCount\", $$v)\n                                  },\n                                  expression: \"practiceObj.newCount\"\n                                }\n                              }),\n                              _c(\n                                \"b-input-group-append\",\n                                [\n                                  _c(\n                                    \"b-button\",\n                                    {\n                                      attrs: {\n                                        type: \"submit\",\n                                        variant: \"primary\"\n                                      }\n                                    },\n                                    [_vm._v(\"提交\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.practiceObj.showDescription\n                ? _c(\"b-form-textarea\", {\n                    attrs: {\n                      placeholder: \"\",\n                      rows: \"3\",\n                      \"max-rows\": \"8\",\n                      readonly: \"\"\n                    },\n                    model: {\n                      value: _vm.practiceObj.description,\n                      callback: function($$v) {\n                        _vm.$set(_vm.practiceObj, \"description\", $$v)\n                      },\n                      expression: \"practiceObj.description\"\n                    }\n                  })\n                : _vm._e(),\n              _vm.practiceCounts\n                ? _c(\n                    \"div\",\n                    [\n                      !_vm.forAdmin\n                        ? _c(\n                            \"div\",\n                            [\n                              _c(\"hr\"),\n                              _c(\"DownloadReport\", {\n                                attrs: {\n                                  forSelf: true,\n                                  practiceId: _vm.practice._getId(),\n                                  worksheet: _vm.practice.get(\"name\") + \"统计\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _c(\"h5\", [\n                        _vm._v(\n                          \"总计有 \" + _vm._s(_vm.items.length) + \" 条报数记录\"\n                        )\n                      ]),\n                      _c(\"b-table\", {\n                        attrs: {\n                          striped: \"\",\n                          hover: \"\",\n                          items: _vm.items,\n                          fields: _vm.fields\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Practice.vue?vue&type=template&id=2cc88beb&\"\nimport script from \"./Practice.vue?vue&type=script&lang=js&\"\nexport * from \"./Practice.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/donghao/Documents/code/buddha/wcsbs/code/wcsbs-online/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2cc88beb')) {\n      api.createRecord('2cc88beb', component.options)\n    } else {\n      api.reload('2cc88beb', component.options)\n    }\n    module.hot.accept(\"./Practice.vue?vue&type=template&id=2cc88beb&\", function () {\n      api.rerender('2cc88beb', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/Practice.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Practice.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Practice.vue?vue&type=script&lang=js&\"","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"7e0fe40c-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Practice.vue?vue&type=template&id=2cc88beb&\""],"sourceRoot":""}